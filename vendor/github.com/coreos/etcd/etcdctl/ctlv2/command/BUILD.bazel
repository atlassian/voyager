load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "auth_commands.go",
        "backup_command.go",
        "cluster_health.go",
        "doc.go",
        "error.go",
        "exec_watch_command.go",
        "format.go",
        "get_command.go",
        "ls_command.go",
        "member_commands.go",
        "mk_command.go",
        "mkdir_command.go",
        "rm_command.go",
        "rmdir_command.go",
        "role_commands.go",
        "set_command.go",
        "set_dir_command.go",
        "update_command.go",
        "update_dir_command.go",
        "user_commands.go",
        "util.go",
        "watch_command.go",
    ],
    importmap = "github.com/atlassian/voyager/vendor/github.com/coreos/etcd/etcdctl/ctlv2/command",
    importpath = "github.com/coreos/etcd/etcdctl/ctlv2/command",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/bgentry/speakeasy:go_default_library",
        "//vendor/github.com/coreos/etcd/client:go_default_library",
        "//vendor/github.com/coreos/etcd/etcdserver/etcdserverpb:go_default_library",
        "//vendor/github.com/coreos/etcd/pkg/fileutil:go_default_library",
        "//vendor/github.com/coreos/etcd/pkg/idutil:go_default_library",
        "//vendor/github.com/coreos/etcd/pkg/pathutil:go_default_library",
        "//vendor/github.com/coreos/etcd/pkg/pbutil:go_default_library",
        "//vendor/github.com/coreos/etcd/pkg/transport:go_default_library",
        "//vendor/github.com/coreos/etcd/snap:go_default_library",
        "//vendor/github.com/coreos/etcd/wal:go_default_library",
        "//vendor/github.com/coreos/etcd/wal/walpb:go_default_library",
        "//vendor/github.com/urfave/cli:go_default_library",
        "//vendor/golang.org/x/net/context:go_default_library",
    ],
)
