load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "etcd_options.go",
        "options.go",
        "plugins.go",
        "run_server.go",
        "util.go",
    ],
    importmap = "github.com/atlassian/voyager/vendor/github.com/kubernetes-incubator/service-catalog/cmd/apiserver/app/server",
    importpath = "github.com/kubernetes-incubator/service-catalog/cmd/apiserver/app/server",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/go-openapi/spec:go_default_library",
        "//vendor/github.com/golang/glog:go_default_library",
        "//vendor/github.com/kubernetes-incubator/service-catalog/pkg/api:go_default_library",
        "//vendor/github.com/kubernetes-incubator/service-catalog/pkg/apiserver:go_default_library",
        "//vendor/github.com/kubernetes-incubator/service-catalog/pkg/apiserver/admission:go_default_library",
        "//vendor/github.com/kubernetes-incubator/service-catalog/pkg/apiserver/authenticator:go_default_library",
        "//vendor/github.com/kubernetes-incubator/service-catalog/pkg/apiserver/options:go_default_library",
        "//vendor/github.com/kubernetes-incubator/service-catalog/pkg/client/clientset_generated/internalclientset:go_default_library",
        "//vendor/github.com/kubernetes-incubator/service-catalog/pkg/client/informers_generated/internalversion:go_default_library",
        "//vendor/github.com/kubernetes-incubator/service-catalog/pkg/openapi:go_default_library",
        "//vendor/github.com/kubernetes-incubator/service-catalog/pkg/util/kube:go_default_library",
        "//vendor/github.com/kubernetes-incubator/service-catalog/pkg/version:go_default_library",
        "//vendor/github.com/kubernetes-incubator/service-catalog/plugin/pkg/admission/broker/authsarcheck:go_default_library",
        "//vendor/github.com/kubernetes-incubator/service-catalog/plugin/pkg/admission/servicebindings/lifecycle:go_default_library",
        "//vendor/github.com/kubernetes-incubator/service-catalog/plugin/pkg/admission/serviceplan/changevalidator:go_default_library",
        "//vendor/github.com/kubernetes-incubator/service-catalog/plugin/pkg/admission/serviceplan/defaultserviceplan:go_default_library",
        "//vendor/github.com/spf13/pflag:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/runtime/schema:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/errors:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/sets:go_default_library",
        "//vendor/k8s.io/apiserver/pkg/admission:go_default_library",
        "//vendor/k8s.io/apiserver/pkg/admission/initializer:go_default_library",
        "//vendor/k8s.io/apiserver/pkg/admission/metrics:go_default_library",
        "//vendor/k8s.io/apiserver/pkg/authorization/authorizerfactory:go_default_library",
        "//vendor/k8s.io/apiserver/pkg/endpoints/openapi:go_default_library",
        "//vendor/k8s.io/apiserver/pkg/server:go_default_library",
        "//vendor/k8s.io/apiserver/pkg/server/options:go_default_library",
        "//vendor/k8s.io/apiserver/pkg/server/storage:go_default_library",
        "//vendor/k8s.io/apiserver/pkg/storage/etcd3/preflight:go_default_library",
        "//vendor/k8s.io/apiserver/pkg/storage/storagebackend:go_default_library",
        "//vendor/k8s.io/client-go/informers:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes:go_default_library",
        "//vendor/k8s.io/client-go/rest:go_default_library",
    ],
)
