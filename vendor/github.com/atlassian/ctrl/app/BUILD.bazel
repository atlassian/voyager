load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "app.go",
        "aux_server.go",
    ],
    importmap = "github.com/atlassian/voyager/vendor/github.com/atlassian/ctrl/app",
    importpath = "github.com/atlassian/ctrl/app",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/ash2k/stager:go_default_library",
        "//vendor/github.com/atlassian/ctrl:go_default_library",
        "//vendor/github.com/atlassian/ctrl/flagutil:go_default_library",
        "//vendor/github.com/atlassian/ctrl/logz:go_default_library",
        "//vendor/github.com/atlassian/ctrl/options:go_default_library",
        "//vendor/github.com/atlassian/ctrl/process:go_default_library",
        "//vendor/github.com/go-chi/chi:go_default_library",
        "//vendor/github.com/go-chi/chi/middleware:go_default_library",
        "//vendor/github.com/prometheus/client_golang/prometheus:go_default_library",
        "//vendor/github.com/prometheus/client_golang/prometheus/promhttp:go_default_library",
        "//vendor/go.uber.org/zap:go_default_library",
        "//vendor/k8s.io/api/core/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/runtime:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/errors:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/core/v1:go_default_library",
        "//vendor/k8s.io/client-go/rest:go_default_library",
        "//vendor/k8s.io/client-go/tools/record:go_default_library",
        "//vendor/k8s.io/client-go/util/workqueue:go_default_library",
    ],
)
