load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "client.go",
        "controller.go",
        "leader_election.go",
        "logger.go",
    ],
    importmap = "github.com/atlassian/voyager/vendor/github.com/atlassian/ctrl/options",
    importpath = "github.com/atlassian/ctrl/options",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/atlassian/ctrl:go_default_library",
        "//vendor/github.com/atlassian/ctrl/logz:go_default_library",
        "//vendor/github.com/pkg/errors:go_default_library",
        "//vendor/go.uber.org/zap:go_default_library",
        "//vendor/go.uber.org/zap/zapcore:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/core/v1:go_default_library",
        "//vendor/k8s.io/client-go/rest:go_default_library",
        "//vendor/k8s.io/client-go/tools/clientcmd:go_default_library",
        "//vendor/k8s.io/client-go/tools/clientcmd/api:go_default_library",
        "//vendor/k8s.io/client-go/tools/leaderelection:go_default_library",
        "//vendor/k8s.io/client-go/tools/leaderelection/resourcelock:go_default_library",
        "//vendor/k8s.io/client-go/tools/record:go_default_library",
        "//vendor/k8s.io/client-go/util/flowcontrol:go_default_library",
    ],
)
